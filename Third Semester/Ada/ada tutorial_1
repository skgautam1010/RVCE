1) Pseudo Code To Solve The Following 

Sum = 1+3+5+....+n


ALGORITHM oddsum(n)
  //finds the sum of n odd numbers
  //Input:integer n
  //output:return sum
  
  sum<-0
  i<-1
  while(i<=n) do
	sum<-sum+i
	i<-i+2
  end while
  return sum


Identify the basic operation 
	--> arithmetic operation performed to find the sum of n odd natural numbers with loop

How many times the basic operation is executed
	--> n times 

What are the parameters on which the basic operations are performed

Find the efficiency of the algorithm 
	--> time efficiency:O(n)

2) Write a pseudo code to  add two matrices

ALGORITHM addmatrices(m1[0....n-1,0...n-1],m2[0....n-1,0...n-1])
	//add two matrices
	//input:two matrices of nxn
	//output:prints the matrics m3[0..n-1,0..n-1] containing the sum
	
	for i<-0 to n
		for j<-0 to n
			m3[i,j]<-m1[i,j]+m2[i,j]
		end for
	end for
	for i<-0 to n
		for j<-0 to n
			print(m3[i,j])
		end for
	end for


Identify the basic operation 
	-->Algorithms basic operation is to access each element using two loops and add each element of 'm1' matrix to each element of 'm2' matrix designated by 'i' and 'j', and construct another matrix 'm3' using it.

How many times the basic operation is executed 
	--> The basic operation is executed n*n times, where 'n' is the order of the matrices.

What are the parameters on which the basic operations are performed
	--> 

Find the efficiency of the algorithm
	-->time efficiency:O(n*n)


3)Write a pseudo code to solve the following 

S = 1! + 2! + 3 ! + ….. n!

ALGORITHM factsum(n)
	//finding sum of n factorials
	//Input:integer n
	//output:sum S
	
	S<-0
	fact<-1
	for i<-1 to n 
		fact <-fact*i
		S <-S+fact
	end for
	return S

Identify the basic operation 
	-->basic operation is to find the factorial and add it to sum with the loop


How many times the basic operation is executed 
	--> n times

What are the parameters on which the basic operations are performed
	-->
Find the efficiency of the algorithm
	--> time efficiency:O(n)



4) Write a pseudo code to solve the following 

 Sum = ½ + 2/2 + 3/2 + 4/2 + 5/2 + ……. N/2 

ALGORITHM fractionalsum(n)
	//finding sum of n natural number each of which divisible by 2
	//input:integer n
	//output:return Sum
	
	Sum <-0
	for i <-1 to n
		Sum <-Sum+i
	end for
	Sum <-Sum/2
	return Sum

Identify the basic operation 
	-->basic operation is to find sum of n numbers with the loop and then divide it by 2


How many times the basic operation is executed 
	--> n times

What are the parameters on which the basic operations are performed
	-->
Find the efficiency of the algorithm
	--> time efficiency:O(n)
